{"version":3,"file":"static/js/320.0fb2b86a.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.jsx","components/IdForm/IdForm.styled.jsx","components/IdForm/IdForm.jsx","components/OrderCard/OrderCard.styled.jsx","components/OrderCard/OrderCard.jsx","pages/History/History.styled.jsx","pages/History/History.jsx","utils/validation.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { Field } from \"formik\";\r\n\r\nexport const StyledLabel = styled.label`\r\n  position: absolute;\r\n  left: 80px;\r\n  top: -24px;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const StyledInput = styled(Field)`\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n  height: 35px;\r\n  width: 80%;\r\n  border: 1px solid black;\r\n`;\r\n\r\nexport const Validation = styled.div`\r\n  color: red;\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 75px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledIdFormBox = styled.div`\r\n  @media screen and (min-width: 1024px) {\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n\r\n  & .form-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    align-items: stretch;\r\n    flex: 1 1 0;\r\n    margin: 20px 0;\r\n    padding: 20px;\r\n    height: 180px;\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n\r\n    & .form-container {\r\n      position: relative;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n  StyledInput,\r\n  StyledLabel,\r\n  Validation,\r\n} from \"../UserInfo/UserInfo.styled\";\r\nimport { StyledIdFormBox } from \"./IdForm.styled\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getUserOrder } from \"../../redux/productsOperations\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { validationIdSchema } from \"../../utils/validation\";\r\n\r\nconst IdForm = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          id: \"\",\r\n        }}\r\n        validationSchema={validationIdSchema}\r\n        onSubmit={(values, formik) => {\r\n          dispatch(getUserOrder(values.id))\r\n            .unwrap()\r\n            .catch((error) => {\r\n              console.log(error);\r\n              if (error === \"Request failed with status code 500\") {\r\n                toast.error(\"Order not found!\", {\r\n                  duration: 4000,\r\n                  position: \"top-right\",\r\n                });\r\n              }\r\n            });\r\n        }}\r\n      >\r\n        {(formik) => (\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <StyledIdFormBox>\r\n              <div className=\"form-box\">\r\n                <div className=\"form-container\">\r\n                  <StyledLabel htmlFor=\"id\"> Order:</StyledLabel>\r\n                  {formik.errors.id && formik.touched.id ? (\r\n                    <Validation>{formik.errors.id}</Validation>\r\n                  ) : null}\r\n                  <StyledInput\r\n                    id=\"id\"\r\n                    name=\"id\"\r\n                    type=\"number\"\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                </div>\r\n                <button type=\"submit\">Submit</button>\r\n              </div>\r\n            </StyledIdFormBox>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n      <Toaster />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default IdForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledOrderContainer = styled.div`\r\n  border-radius: 10px;\r\n  border: 1px solid black;\r\n  padding: 10px 10px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  & .container {\r\n    gap: 5px;\r\n    justify-content: flex-start;\r\n    flex-grow: 1;\r\n\r\n    @media screen and (min-width: 768px) {\r\n      gap: 0px;\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      max-width: 80%;\r\n    }\r\n\r\n    @media screen and (min-width: 1024px) {\r\n      gap: 10px;\r\n    }\r\n  }\r\n\r\n  & .total {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    min-width: 20%;\r\n\r\n    @media screen and (min-width: 768px) {\r\n      min-width: 20%;\r\n    }\r\n\r\n    @media screen and (min-width: 1240px) {\r\n      max-width: 10%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledOrderCard = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n  justify-content: left;\r\n  flex-direction: column;\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  border: 1px solid black;\r\n  transition: all var(--transition-dur-and-func);\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    gap: 10px;\r\n    flex-direction: row;\r\n    width: 50%;\r\n    align-items: center;\r\n    justify-content: left;\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    width: 47%;\r\n    /* gap: 10px; */\r\n  }\r\n  @media screen and (min-width: 1240px) {\r\n    /* width: 45%; */\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0 1px 8px 2px rgba(0, 0, 0, 0.245);\r\n  }\r\n\r\n  & img {\r\n    margin: 0;\r\n    min-width: 220px;\r\n    height: 120px;\r\n    object-fit: cover;\r\n    border-radius: 10px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n      min-width: 140px;\r\n      height: 90px;\r\n    }\r\n\r\n    @media screen and (min-width: 1024px) {\r\n      min-width: 200px;\r\n      height: 110px;\r\n    }\r\n\r\n    @media screen and (min-width: 1240px) {\r\n      min-width: 240px;\r\n      height: 130px;\r\n    }\r\n  }\r\n\r\n  .cart-item-data {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    font-size: 16px;\r\n\r\n    @media screen and (min-width: 768px) {\r\n      align-items: flex-start;\r\n      margin-top: 0;\r\n    }\r\n  }\r\n\r\n  & p {\r\n    padding-bottom: 15px;\r\n  }\r\n\r\n  & .price {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectOrder } from \"../../redux/productsSelector\";\r\nimport { StyledOrderCard, StyledOrderContainer } from \"./OrderCard.styled\";\r\n\r\nconst OrderCard = () => {\r\n  const userOrder = useSelector(selectOrder);\r\n  const { total, order } = userOrder;\r\n\r\n  if (order === undefined) return;\r\n  return (\r\n    <>\r\n      <StyledOrderContainer>\r\n        <div className=\"container\">\r\n          {order.map(({ amount, price, strMeal, strMealThumb, idMeal }) => {\r\n            return (\r\n              <StyledOrderCard key={idMeal}>\r\n                <img src={strMealThumb} alt={strMeal} />\r\n                <div className=\"cart-item-data\">\r\n                  <p>{strMeal}</p>\r\n                  <p className=\"price\">\r\n                    {amount} x {price} &euro;\r\n                  </p>\r\n                </div>\r\n              </StyledOrderCard>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"total\">Total price: {total} &euro;</div>\r\n      </StyledOrderContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderCard;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HistoryContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 20px;\r\n\r\n  & h1 {\r\n    margin-top: 25px;\r\n    text-align: center;\r\n    font-size: 25px;\r\n  }\r\n\r\n  & button {\r\n    margin: 0 auto;\r\n    width: fit-content;\r\n    padding: 10px 20px;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n    background-color: var(--button-color-skyblue);\r\n    transition: background-color var(--transition-dur-and-func);\r\n    &:hover {\r\n      background-color: var(--accent-color-yellow);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport IdForm from \"../../components/IdForm/IdForm\";\r\nimport OrderCard from \"../../components/OrderCard/OrderCard\";\r\nimport { selectOrder } from \"../../redux/productsSelector\";\r\nimport { HistoryContainer } from \"./History.styled\";\r\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\r\n\r\nconst History = () => {\r\n  const order = useSelector(selectOrder);\r\n  return (\r\n    <>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <title>History</title>\r\n        </Helmet>\r\n        <HistoryContainer>\r\n          <h1>Review orders</h1>\r\n\r\n          <IdForm />\r\n\r\n          {Object.keys(order).length !== 0 ? <OrderCard /> : null}\r\n        </HistoryContainer>\r\n      </HelmetProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import * as yup from \"yup\";\r\n\r\nconst emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\r\n\r\nexport const validationSchema = yup.object().shape({\r\n  name: yup\r\n    .string(\"Only Latin Letters!\")\r\n    .matches(/^([^0-9]*)$/, \"No numbers allowed!\")\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Name is required\"),\r\n  email: yup\r\n    .string()\r\n    .matches(emailRegex, \"Invalid email address\")\r\n    .required(\"Email is required\"),\r\n  phone: yup.number().min(9, \"Too short!\").required(\"Phone is required\"),\r\n  address: yup\r\n    .string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Address is required\"),\r\n});\r\n\r\nexport const validationIdSchema = yup.object().shape({\r\n  id: yup\r\n    .number()\r\n    .typeError(\"Please enter a valid number\")\r\n    .min(1, \"Order number must be higher then 0\")\r\n    .required(\"Order number is required\"),\r\n});\r\n"],"names":["StyledLabel","styled","_templateObject","_taggedTemplateLiteral","StyledInput","Field","_templateObject2","Validation","_templateObject3","StyledIdFormBox","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Formik","initialValues","id","validationSchema","validationIdSchema","onSubmit","values","formik","getUserOrder","unwrap","catch","error","console","log","toast","duration","position","handleSubmit","className","htmlFor","errors","touched","name","type","onChange","handleChange","Toaster","StyledOrderContainer","StyledOrderCard","userOrder","useSelector","selectOrder","total","order","undefined","map","_ref","amount","price","strMeal","strMealThumb","idMeal","src","alt","HistoryContainer","HelmetProvider","Helmet","IdForm","Object","keys","length","OrderCard","yup","shape","matches","min","max","required","email","phone","address","typeError"],"sourceRoot":""}