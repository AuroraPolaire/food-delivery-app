{"version":3,"file":"static/js/22.ab86ec74.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.jsx","components/CartItemsList/CartItemList.styled.jsx","components/CartItemsList/CartItemList.jsx","components/UserInfo/UserInfo.jsx","pages/ShoppingCart/ShoppingCart.styled.jsx","utils/validation.js","pages/ShoppingCart/ShoppingCart.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { Field } from \"formik\";\r\n\r\nexport const StyledLabel = styled.label`\r\n  position: absolute;\r\n  left: 80px;\r\n  top: -24px;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const StyledInput = styled(Field)`\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n  height: 35px;\r\n  width: 80%;\r\n  border: 1px solid black;\r\n`;\r\n\r\nexport const Validation = styled.div`\r\n  color: red;\r\n  position: absolute;\r\n  top: 8px;\r\n  right: 70px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { DeleteIcon } from \"@chakra-ui/icons\";\r\n\r\nexport const CartBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 15px;\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n  border: 1px solid black;\r\n  transition: all var(--transition-dur-and-func);\r\n\r\n  @media screen and (min-width: 768px) {\r\n    flex-direction: row;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0 1px 8px 2px rgba(0, 0, 0, 0.245);\r\n  }\r\n\r\n  & img {\r\n    margin: 0;\r\n    width: 350px;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .cart-item-data {\r\n    text-align: center;\r\n    font-size: 16px;\r\n  }\r\n\r\n  & p {\r\n    padding-bottom: 15px;\r\n    overflow-wrap: break-word;\r\n  }\r\n\r\n  & .price {\r\n    font-weight: bold;\r\n  }\r\n\r\n  & input {\r\n    padding: 8px;\r\n    border-radius: 5px;\r\n    height: 35px;\r\n    width: 50%;\r\n    border: 1px solid black;\r\n  }\r\n`;\r\n\r\nexport const StyledIcon = styled(DeleteIcon)`\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: red;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectCart } from \"../../redux/productsSelector\";\r\nimport { changeAmount, removeProduct } from \"../../redux/productsSlice\";\r\nimport { CartBox, StyledIcon } from \"./CartItemList.styled\";\r\nimport { DeleteIcon } from \"@chakra-ui/icons\";\r\nimport { Field } from \"formik\";\r\n\r\nconst CartItemList = ({ formik }) => {\r\n  const cartItems = useSelector(selectCart);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      {cartItems.map(({ strMealThumb, strMeal, price, idMeal, amount }) => {\r\n        return (\r\n          <CartBox key={idMeal}>\r\n            <DeleteIcon\r\n              as={StyledIcon}\r\n              w={20}\r\n              h={20}\r\n              onClick={(e) => dispatch(removeProduct(idMeal))}\r\n            />\r\n\r\n            <img src={strMealThumb} alt={strMeal} />\r\n            <div className=\"cart-item-data\">\r\n              <p>{strMeal}</p>\r\n              <p>\r\n                Price: <span className=\"price\">{price} &euro; </span>\r\n              </p>\r\n              <Field\r\n                name=\"amount\"\r\n                type=\"number\"\r\n                min={1}\r\n                max={20}\r\n                pattern=\"[1-9]{1}\"\r\n                defaultValue={amount}\r\n                required\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  dispatch(changeAmount({ idMeal, value }));\r\n                }}\r\n              />\r\n            </div>\r\n          </CartBox>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartItemList;\r\n","import React from \"react\";\r\nimport { StyledInput, StyledLabel, Validation } from \"./UserInfo.styled\";\r\n\r\nconst UserInfo = ({ formik }) => {\r\n  return (\r\n    <>\r\n      <div className=\"form-container\">\r\n        <StyledLabel htmlFor=\"name\"> Name:</StyledLabel>\r\n        {formik.errors.name && formik.touched.name ? (\r\n          <Validation>{formik.errors.name}</Validation>\r\n        ) : null}\r\n        <StyledInput\r\n          id=\"name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-container\">\r\n        <StyledLabel htmlFor=\"email\">Email:</StyledLabel>\r\n        {formik.errors.email && formik.touched.email ? (\r\n          <Validation>{formik.errors.email}</Validation>\r\n        ) : null}\r\n        <StyledInput\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          onChange={formik.handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-container\">\r\n        <StyledLabel htmlFor=\"phone\">Phone:</StyledLabel>\r\n        {formik.errors.phone && formik.touched.phone ? (\r\n          <Validation>{formik.errors.phone}</Validation>\r\n        ) : null}\r\n        <StyledInput\r\n          id=\"phone\"\r\n          name=\"phone\"\r\n          type=\"tel\"\r\n          onChange={formik.handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"form-container\">\r\n        <StyledLabel htmlFor=\"address\">Address:</StyledLabel>\r\n        {formik.errors.address && formik.touched.address ? (\r\n          <Validation>{formik.errors.address}</Validation>\r\n        ) : null}\r\n        <StyledInput\r\n          id=\"address\"\r\n          name=\"address\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledCartBox = styled.div`\r\n  /* display: flex;\r\n  gap: 10px; */\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n\r\n  & .form-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    align-items: stretch;\r\n    flex: 1 1 0;\r\n    margin: 20px 0;\r\n    padding: 20px;\r\n    height: 70vh;\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n\r\n    & .form-container {\r\n      position: relative;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n  }\r\n\r\n  & .cart-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 15px;\r\n    flex: 1 1 0;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    margin: 20px 0;\r\n    padding: 20px;\r\n    height: 70vh;\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nexport const StyledTotal = styled.div`\r\n  display: flex;\r\n  gap: 50px;\r\n  justify-content: right;\r\n  align-items: center;\r\n\r\n  & :first-child {\r\n    font-size: 20px;\r\n  }\r\n\r\n  & .price {\r\n    font-weight: bold;\r\n  }\r\n\r\n  & button {\r\n    padding: 10px 20px;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n    background-color: var(--button-color-skyblue);\r\n    transition: background-color var(--transition-dur-and-func);\r\n\r\n    &:hover {\r\n      background-color: var(--accent-color-yellow);\r\n    }\r\n  }\r\n`;\r\n","import * as yup from \"yup\";\r\n\r\nconst emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\r\n\r\nexport const validationSchema = yup.object().shape({\r\n  name: yup\r\n    .string(\"Only Latin Letters!\")\r\n    .matches(/^([^0-9]*)$/, \"No numbers allowed!\")\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Name is required\"),\r\n  email: yup\r\n    .string()\r\n    .matches(emailRegex, \"Invalid email address\")\r\n    .required(\"Email is required\"),\r\n  phone: yup.number().min(9, \"Too short!\").required(\"Phone is required\"),\r\n  address: yup\r\n    .string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Address is required\"),\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CartItemList from \"../../components/CartItemsList/CartItemList\";\r\nimport UserInfo from \"../../components/UserInfo/UserInfo\";\r\nimport { Formik } from \"formik\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectCart, selectTotal } from \"../../redux/productsSelector\";\r\nimport { calculateTotal, emptyCart } from \"../../redux/productsSlice\";\r\nimport { StyledCartBox, StyledTotal } from \"./ShoppingCart.styled\";\r\nimport { validationSchema } from \"../../utils/validation\";\r\nimport { sendUserOrder } from \"../../redux/productsOperations\";\r\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nconst ShoppingCart = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cartItems = useSelector(selectCart);\r\n  const total = useSelector(selectTotal);\r\n  // eslint-disable-next-line\r\n  const [cart, setCart] = useState(cartItems);\r\n\r\n  useEffect(() => {\r\n    dispatch(calculateTotal());\r\n    setCart(cartItems);\r\n  }, [dispatch, cartItems]);\r\n\r\n  return (\r\n    <>\r\n      <HelmetProvider>\r\n        <Helmet>\r\n          <title>Shopping cart</title>\r\n        </Helmet>\r\n        <Formik\r\n          initialValues={{\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            address: \"\",\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values, formik) => {\r\n            dispatch(\r\n              sendUserOrder({\r\n                ...values,\r\n                total: total,\r\n                order: cartItems,\r\n              })\r\n            ).then(({ payload }) => {\r\n              toast.success(\r\n                `Order successfully sent! Your order number is ${payload.id}. You can check it on History page`,\r\n                {\r\n                  duration: 8000,\r\n                  position: \"top-right\",\r\n                }\r\n              );\r\n              dispatch(emptyCart());\r\n              formik.resetForm();\r\n            });\r\n\r\n            console.log(values, total, cartItems);\r\n          }}\r\n        >\r\n          {(formik) => (\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <StyledCartBox>\r\n                <div className=\"form-box\">\r\n                  <UserInfo formik={formik} />\r\n                </div>\r\n                <div className=\"cart-box\">\r\n                  {cartItems.length === 0 ? (\r\n                    <div className=\"empty\">The cart is empty.</div>\r\n                  ) : (\r\n                    <CartItemList\r\n                      formik={formik}\r\n                      type=\"number\"\r\n                      label=\"amount\"\r\n                    />\r\n                  )}\r\n                </div>\r\n              </StyledCartBox>\r\n              <StyledTotal>\r\n                <div>\r\n                  Total price: <span className=\"price\">{total} &euro;</span>\r\n                </div>\r\n                <button disabled={cartItems.length === 0} type=\"submit\">\r\n                  Submit\r\n                </button>\r\n              </StyledTotal>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n        <Toaster />\r\n      </HelmetProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShoppingCart;\r\n"],"names":["StyledLabel","styled","_templateObject","_taggedTemplateLiteral","StyledInput","Field","_templateObject2","Validation","_templateObject3","CartBox","StyledIcon","DeleteIcon","_ref","formik","cartItems","useSelector","selectCart","dispatch","useDispatch","_jsx","_Fragment","children","map","_ref2","strMealThumb","strMeal","price","idMeal","amount","_jsxs","as","w","h","onClick","e","removeProduct","src","alt","className","name","type","min","max","pattern","defaultValue","required","onChange","value","target","changeAmount","htmlFor","errors","touched","id","handleChange","email","phone","address","StyledCartBox","StyledTotal","validationSchema","yup","shape","matches","total","selectTotal","_useState","useState","_useState2","_slicedToArray","setCart","useEffect","calculateTotal","HelmetProvider","Helmet","Formik","initialValues","onSubmit","values","sendUserOrder","_objectSpread","order","then","payload","toast","concat","duration","position","emptyCart","resetForm","console","log","handleSubmit","UserInfo","length","CartItemList","label","disabled","Toaster"],"sourceRoot":""}